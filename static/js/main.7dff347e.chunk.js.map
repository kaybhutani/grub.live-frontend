{"version":3,"sources":["assets/images/grub.live-logo.svg","assets/images/mobile-qr-menu.svg","assets/images/grub.live-logo-yellow.svg","assets/images/HowItWorks/Step1.png","assets/images/HowItWorks/Step2.png","assets/images/HowItWorks/Step3.png","assets/images/HowItWorks/Step4.png","assets/images/HowItWorks/Step5.png","assets/images/three_dots_loading.svg","components/NavLink.js","components/Navigation.js","components/Home.js","components/Footer.js","components/EditMenu.js","components/PreviewRestaurantMenu.js","components/PreviewMenu.js","components/CreateMenu.js","components/HowItWorks.js","components/QrImage.js","components/QrContainter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavLink","props","getProps","className","isCurrent","Navigation","to","src","logo","alt","Home","useState","featureOpen","setFeatureOpen","name","description","map","feature","key","onClick","openFeature","mobileQrMenu","Footer","yellowLogo","EditMenu","restaurantDetails","setRestaurantDetails","submitState","setSubmitState","addItem","categoryKey","temp","menu","categories","items","push","itemName","itemPrice","itemOnChange","itemType","e","itemKey","target","value","handleKeyDown","keyCode","preventDefault","required","placeholder","onChange","restaurantName","changeRestaurantTitle","defaultValue","type","accept","uploadedFile","files","size","alert","reader","FileReader","readAsDataURL","onloadend","result","console","log","updateLogo","emailId","changeEmailId","element","splice","deleteCategory","style","float","onKeyDown","title","updateTitle","item","display","deleteItem","addCategory","window","requestOptions","method","headers","body","JSON","stringify","fetch","apiBaseUrl","then","response","json","data","success","location","id","submitMenu","PreviewRestaurantMenu","textAlign","color","fontSize","margin","PreviewMenu","CreateMenu","StepRight","no","imageURL","StepLeft","HowItWorks","Step1","Step2","Step3","Step4","Step5","QrImage","url","QrContainer","dataFetched","setDataFetched","menuId","useParams","htmlToImage","document","getElementById","dataUrl","svgImg","createElement","href","setAttribute","click","marginBottom","loadingIcon","App","exact","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7dff347e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grub.live-logo.3b6b4ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-qr-menu.a848aa64.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo-yellow.8cd86dd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Step1.1db91c17.png\";","module.exports = __webpack_public_path__ + \"static/media/Step2.721d4588.png\";","module.exports = __webpack_public_path__ + \"static/media/Step3.76cd4818.png\";","module.exports = __webpack_public_path__ + \"static/media/Step4.2eb10e55.png\";","module.exports = __webpack_public_path__ + \"static/media/Step5.4843d07a.png\";","module.exports = __webpack_public_path__ + \"static/media/three_dots_loading.4d1c15f3.svg\";","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst NavLink = (props) => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        className: isCurrent ? 'active' : ''\n      }\n    }}\n  />\n)\n\nexport default NavLink","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport logo from '../assets/images/grub.live-logo.svg'\nimport NavLink from './NavLink'\n\n\nconst Navigation = () => {\n  \n  return (\n    <div>\n  \n      <nav>\n      <Link to='/' className='nav-item'>\n        <div>\n          <img className='logo' src={logo} alt='Grub.live logo'  />\n        </div>\n      </Link>\n      <div className='nav-item-right'>\n        <NavLink to='/how-it-works'><div className='hyperlink nav-item'>How it works?</div></NavLink>\n        <NavLink to='/create'>\n          <button className='black-yellow nav-item'>\n            Create Menu\n          </button>\n        </NavLink>\n      </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport mobileQrMenu from '../assets/images//mobile-qr-menu.svg'\nimport NavLink from './NavLink'\nimport { Link } from 'react-router-dom'  \n\nconst Home = () => {\n\n  const [featureOpen, setFeatureOpen] = useState([true, 0])\n\n  const features = [\n    {\n      name: 'Enhances Safety',\n      description: `Virtual menu's ensures a safe outlet by avoiding any unneeded interaction with staff, especially in times of COVID-19 safeguarding both staff and customers.`\n    },\n    {\n      name: `No delay`,\n      description: `Just open and start selecting out of menu, without waiting for the staff to reach out to you.`\n    },\n    {\n      name: `Super Quick and Simple`,\n      description: `It is super quick for people to scan the QR and get the menu on all of their phones. Your menu will never fall short now :D`\n    },\n    {\n      name: `Always Updated`,\n      description: `No matter if your dishes change daily or monthly, you don't have to print menu's again! Just update it on grub.live.`\n    },\n    {\n      name: `Free and Easy to set up`,\n      description: `Our virtual menu's are and will be forever Free and easy to use!`\n    }\n    \n\n  ]\n\n  const openFeature = (key) => {\n    if(featureOpen[1]===key) {\n      setFeatureOpen([false, -1])\n      return\n    }\n\n    setFeatureOpen([true, key])\n  }\n  return (\n    <div className='container'>\n      \n      <div className='header' >\n        \n        <h1 >Free {'&'} Simple Virtual QR Menu's <br></br> Rejuvenating the dining experience.</h1>\n        <div className='header-features'>\n          \n          {\n            features.map((feature, key) => {\n              return (\n                <div className='feature' key={key}>\n                  <button onClick={() => openFeature(key)} className='btn-link'><h3>{feature.name}<i className='eos-icons'>{(featureOpen[0] && featureOpen[1]===key)?(`keyboard_arrow_down`):(`keyboard_arrow_right`) }</i> </h3> </button>\n                  {/* {(featureOpen[0] && featureOpen[1]===key)? (\n                    <p className='fadein'>{feature.description}</p>\n                  ): (<p className='fadeout'>{feature.description}</p>)} */}\n                  <p className={`fade${(featureOpen[0] && featureOpen[1]===key) ? \"in\" : \"out\"}`}>{feature.description}</p>\n                  \n                </div>\n              )\n            })\n          }\n\n          \n          \n        </div>\n        <div className='intro-img'>\n          <img  src={mobileQrMenu} alt=''></img>\n        </div>\n        <div>\n          <Link to='/how-it-works'>\n            <button className='btn-link learn-more'>Learn more <i className='eos-icons'>keyboard_arrow_right</i></button>\n          </Link>\n          <br></br>\n          <NavLink to='/create'>\n            <button className='black-yellow'>\n              Create Menu \n            </button>\n          </NavLink>\n          <button className='black-yellow'>\n            Scan Menu \n          </button>\n      </div>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport yellowLogo from '../assets/images/grub.live-logo-yellow.svg'\nconst Footer = () => {\n\n\n  return (\n    <footer>\n        <div>\n          <img src={yellowLogo} alt='Grub.live logo' className='logo'></img>\n          <div>Rejuvenating the dining experience.</div>\n        </div>\n        <div className='footer-links'>\n          <div className='footer-item hyperlink-invert'>Contact Us</div>\n          <div className='footer-item hyperlink-invert'>How it works</div>\n          <div className='footer-item hyperlink-invert'>Feedback</div>\n          <div className='footer-item hyperlink-invert'>About Us</div>\n        </div>\n        <br></br>\n        <br></br>\n      <span>Made with ❤ in India</span><br></br>\n      <span>© 2020 Grub.live</span>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport {apiBaseUrl} from '../config.json'\n\nconst EditMenu = (props) => {\n  \n  const restaurantDetails = props.restaurantDetails\n  const setRestaurantDetails = props.setRestaurantDetails\n\n  const [submitState, setSubmitState]  = useState(false)\n  const changeRestaurantTitle = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.restaurantName =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n\n  const changeEmailId = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.emailId =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n\n  const updateLogo = (e) => {\n    const uploadedFile = e.target.files[0]\n    if(uploadedFile) {\n      if(uploadedFile.size > 2000000) {\n        alert(\"Please upload an image with size less than 2 mb.\")\n        return;\n      }\n\n      const reader = new FileReader()\n      reader.readAsDataURL(uploadedFile)\n      reader.onloadend = () => {\n\n      const temp = {...restaurantDetails}\n      temp.logo =  reader.result\n      console.log(reader.result)\n      setRestaurantDetails(temp)\n\n      }\n    }\n    \n  }\n\n  const updateTitle = (e, key) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[key].title = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addItem = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.push({\n      itemName: \"\",\n      itemPrice: \"\"\n    })\n    setRestaurantDetails(temp)\n  }\n\n  const deleteItem = (categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.splice(itemKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const itemOnChange = (itemType, e, categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    itemType === 'name' ? \n    temp.menu.categories[categoryKey].items[itemKey].itemName = e.target.value\n    :\n    temp.menu.categories[categoryKey].items[itemKey].itemPrice = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addCategory = () => {\n\n    const temp = {...restaurantDetails}\n    temp.menu.categories.push( {\n      title: '',\n      type: 'text',\n      items: [\n\n      ]\n    }) \n    setRestaurantDetails(temp)\n\n  }\n\n  const deleteCategory = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories.splice(categoryKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const handleKeyDown = (e, categoryKey) => {\n    if(e.keyCode === 13) \n      {\n        e.preventDefault()\n        addItem(categoryKey)\n        \n      }\n  }\n\n\n  const submitMenu = e => {\n    if(!submitState) {\n      setSubmitState(true)  \n      if(!restaurantDetails.emailId || !restaurantDetails.restaurantName) {\n        setSubmitState(false)\n        window.alert('Restaurant name and Email Id cannot be blank')\n        return\n      }\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(restaurantDetails)\n      };\n      fetch(`${apiBaseUrl}/submit`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          setSubmitState(false)\n          console.log(data)\n          if(!data.success)\n            {\n              window.alert('Some problem occrred while creating menu')\n              return\n            }\n            window.location = `/#/qr/${data.id }`\n          \n        });\n    }\n  }\n\n  return (\n    <div className='edit-menu'>\n      <h2>Edit Menu <i className='eos-icons'>edit</i></h2>\n      <p>Please enter the following details to create your Virtual QR Menu.</p>\n      <br></br>\n      \n      <form>\n      <div className='shadow-box'>\n        <p>Name of Restaurant</p>\n        <input required={true} className='form-input' placeholder='Example: Moti Mahal Deluxe' onChange={ e => changeRestaurantTitle(e)} defaultValue={restaurantDetails.restaurantName}></input>\n        <p>Logo (if any)</p>\n        <input type='file' accept='image/*' onChange={e => updateLogo(e)}></input>\n        <p>Email ID (You can use this to edit Menu later)</p>\n        <input type=\"email\" required={true} className='form-input' placeholder='Example: johndoe@gmail.com' onChange={ e => changeEmailId(e)} defaultValue={restaurantDetails.emailId}></input>\n      </div>\n      \n\n      {restaurantDetails.menu.categories.map((element, categoryKey) => {\n         return (\n         \n         <div className='shadow-box' key={categoryKey}>\n           <i onClick={() => deleteCategory(categoryKey)} style={{float: 'right'}} className='eos-icons delete-icon'>close</i>\n          <p>Title</p>\n          <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} className='form-input' onChange={e => updateTitle(e,categoryKey)} placeholder='Example: Chinese food'></input>\n          <br></br><br></br>\n          <div>\n            {\n              restaurantDetails.menu.categories[categoryKey].items.map((item, itemKey) => {\n                return (\n                  <div key = {itemKey}>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Item Name</p>\n                      <input required={true} onChange = {(e) => itemOnChange('name', e, categoryKey, itemKey)} className='form-input' placeholder='Eg: French Fries'></input>\n                    </div>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Price</p>\n                      <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} onChange = {(e) => itemOnChange('price', e, categoryKey, itemKey)} className='form-input' placeholder='Eg: Half: $4.99 , Full: $9.99'></input>\n                    </div>\n                    <i onClick={() => deleteItem(categoryKey, itemKey)} className='eos-icons delete-icon'>delete</i>\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{float: \"right\"}}>\n            <button type='button' className='hyperlink btn-link' onClick={() => addItem(categoryKey)}>Add Item <i className='eos-icons'>add_circle_outline</i> </button>\n          </div>\n\n\n        </div>\n        )\n        \n      })}\n            \n      <div>\n        <div style={{float: \"right\"}}>\n          <button type='button' className='hyperlink btn-link' onClick={() => addCategory()}>Add Category <i className='eos-icons'>add_circle_outline</i> </button>\n        </div>\n          <br></br>\n          <br></br>\n        <div style={{float: \"right\"}}>\n          <button type='button' onClick={(e) => submitMenu(e)} className='black-yellow'>\n            {submitState ? (\n                `Generating...`\n            ): (`Generate QR Menu`)}\n            \n          </button>\n        </div>\n      </div>\n\n      </form>\n\n    </div>\n  )\n\n}\n\n\nexport default EditMenu\n","import React from 'react'\n\nconst PreviewRestaurantMenu = (props) => {\n\n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='shadow-box'>\n\n      <div  style={{textAlign: \"center\"}}>\n          <h1>\n            {restaurantDetails.logo?\n            (<img src={restaurantDetails.logo} alt='' className='restaurant-logo'></img>)\n            :\n            (<i className='eos-icons' style={{color: 'red', fontSize: '1em', margin: '8px'}}>local_dining</i>)}   \n            {restaurantDetails.restaurantName}</h1>\n        </div> \n    <br></br>\n    <div>\n      {restaurantDetails.menu.categories.map((element, key) => {\n            return (\n            \n            <div key={key}>\n            <h2>{element.title}</h2>\n            \n\n            {\n              restaurantDetails.menu.categories[key].items.map((item, itemKey) => {\n                return (<div key={itemKey}>\n                  <p style={{display: \"inline-block\", margin: 0}}>{item.itemName}</p>\n                  <p style={{float: \"right\", margin: 0}}>{item.itemPrice}</p>\n                  <br></br>\n                  <br></br>  \n                </div>\n                \n                )\n              })\n            }\n            \n          \n          </div>)\n          \n        })}  \n    </div>\n    </div>\n  )\n\n}\n\nexport default PreviewRestaurantMenu","import React from 'react'\nimport PreviewRestaurantMenu from './PreviewRestaurantMenu'\nconst PreviewMenu = (props) => {\n  \n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='preview-menu'>\n      <h2>Preview Menu <i className='eos-icons'>slideshow</i></h2>\n      <p>Once done, create on Generate QR Menu to create your Virtual Menu.</p>\n      <br></br>\n      <PreviewRestaurantMenu restaurantDetails={restaurantDetails} />\n    </div>\n  )\n\n}\n\n\nexport default PreviewMenu","import React, { useState } from 'react'\nimport EditMenu from './EditMenu'\nimport PreviewMenu from './PreviewMenu'\nconst CreateMenu = () => {\n\n  const sampleRestaurantDetails = {\n    emailId: \"\",\n    restaurantName: \"\",\n    logo: \"\",\n    menu: {\n      categories: [ ]\n    }\n  }\n  const [restaurantDetails, setRestaurantDetails] = useState(sampleRestaurantDetails);\n  \n  return (\n\n    <div className='container'>\n\n      <EditMenu restaurantDetails={restaurantDetails} setRestaurantDetails={setRestaurantDetails}/>\n      <PreviewMenu restaurantDetails={restaurantDetails} />\n      \n    </div>\n  )\n}\n\nexport default CreateMenu","import React from 'react'\nimport Step1 from '../assets/images/HowItWorks/Step1.png'\nimport Step2 from '../assets/images/HowItWorks/Step2.png'\nimport Step3 from '../assets/images/HowItWorks/Step3.png'\nimport Step4 from '../assets/images/HowItWorks/Step4.png'\nimport Step5 from '../assets/images/HowItWorks/Step5.png'\n\nconst StepRight = (props) =>{\n\n    return(\n    <div className=\"mainDiv\">\n    <div className='textLeft'>\n        <h1>Step {props.no}</h1>\n        <p>{props.name}</p>\n    </div> \n    <div className=\"imgRight\">\n        <img src={props.imageURL}  alt=''></img>\n    </div>     \n    </div>\n    )\n}\n\nconst StepLeft = (props) =>{\n\n    return(\n        <div className=\"mainDiv\">\n         <div className='textRight'>\n            <h1>Step {props.no}</h1>\n            <p>{props.name}</p>\n        </div> \n        <div className=\"imgLeft\">\n            <img src={props.imageURL} alt=''></img>\n        </div>      \n        </div>\n        )\n  \n}\n\nconst HowItWorks = () =>{\n\n    return(\n       <div>\n       <StepRight\n        name=\"Naman\"\n        no=\"1\"\n        imageURL={Step1}\n        \n         />\n\n        <StepLeft \n         name=\"Bhatia\"\n         no=\"2\"\n         imageURL={Step2}\n\n         />\n \n        <StepRight\n        name=\"Naman\"\n        no=\"3\"\n        imageURL={Step3}\n        \n         />\n\n        <StepLeft \n         name=\"Bhatia\"\n         no=\"4\"\n         imageURL={Step4}\n\n         />\n\n        <StepRight\n        name=\"Naman\"\n        no=\"5\"\n        imageURL={Step5}\n        \n         />\n\n\n         </div>\n    )\n}\n\nexport default HowItWorks","import React from 'react'\nimport QRCode from 'qrcode.react'\nimport logo from '../assets/images/grub.live-logo.svg'\n\nconst QrImage = (props) => {\n\n  const url = props.url\n  const restaurantDetails = props.restaurantDetails\n  console.log(restaurantDetails)\n\n\n\n  return (\n\n    <div className='qr-image'>\n      <div id='qr-download'>\n        <img src={logo} alt='' className='logo'></img>\n        <hr></hr>\n        <h2>\n        {\n          restaurantDetails.logo?\n          <img src={restaurantDetails.logo} alt='' className='restaurant-logo'></img>\n          :\n          (<i className='eos-icons' style={{color: 'red', fontSize: '1em', margin: '8px'}}>local_dining</i>)\n        }\n        {restaurantDetails.restaurantName}\n        </h2>\n        <p>Scan to see Menu</p>\n        <QRCode size={200} className='qr-code' id='qr-code' value={url}/>\n        <p>QR Menu Genreated with www.grub.live</p>\n      </div>\n    </div>\n  )\n\n}\n\nexport default QrImage\n","import React, {useState} from 'react'\nimport * as htmlToImage from 'html-to-image';\nimport {useParams} from 'react-router-dom'\nimport loadingIcon from '../assets/images/three_dots_loading.svg'\n\n\nimport {apiBaseUrl} from '../config.json'\nimport QrImage from './QrImage'\n\n\nconst QrContainer = (props) => {\n\n  const [restaurantDetails, setRestaurantDetails] = useState(null)\n  const [dataFetched, setDataFetched] = useState(false)\n  let { menuId } = useParams();\n  if(!dataFetched) {\n    fetch(`${apiBaseUrl}/view?q=${menuId}`)\n        .then(response => response.json())\n        .then(data => {\n          setDataFetched(true)\n          console.log(data)\n          if(data.success)\n            {\n              setRestaurantDetails(data.data)\n            }\n        });\n  }\n\n  const url = `https://glqr.me/#/${menuId}`\n\n  const downloadSticker = () => {\n    console.log('Downloading QR Sticker...')\n    htmlToImage.toPng(document.getElementById('qr-download'))\n    .then(function (dataUrl) {\n      var svgImg = document.createElement('a');\n      svgImg.href = dataUrl;\n      svgImg.setAttribute('download', 'QrMenu.png');\n      svgImg.click();\n      // document.body.append(svgImg)\n\n      \n    });\n  }\n\n  const downloadQrCode = () => {\n    console.log('Downloading QR Code...')\n    htmlToImage.toPng(document.getElementById('qr-code'))\n    .then(function (dataUrl) {\n      var svgImg = document.createElement('a');\n      svgImg.href = dataUrl;\n      svgImg.setAttribute('download', 'QrCode.png');\n      svgImg.click();\n      // document.body.append(svgImg)\n    });\n  }\n\n\n  return (\n    <div className='container' style={{textAlign: \"left\"}}>\n      \n      {dataFetched ? (\n      <div>\n          {restaurantDetails?\n        (\n          <div>\n            <h2>QR Menu Generated!</h2>\n            <p>You are ready for contactless dining experience. Download your QR code and paste it on the table.</p>\n            <button onClick={() => downloadSticker()} className='black-yellow'>Download QR Sticker</button>\n            <button onClick={() => downloadQrCode()} className='black-yellow'>Download QR Code</button>\n            <QrImage url={url} restaurantDetails = {restaurantDetails}/>\n          </div>\n        ):\n        (\n          <div>\n            <h1>Incorrect Menu Id</h1>\n          </div>\n        )}\n      </div>\n        )\n      :\n      (\n      <div style={{textAlign: \"center\", marginBottom: '40%'}}>\n        <img alt='' className='loading-icon' src={loadingIcon} />\n      </div>\n      )}\n\n    </div>\n  )\n}\n\nexport default QrContainer\n\n","import React from 'react'\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\"\n\nimport './assets/scss/index.scss'\nimport '../node_modules/eos-icons/dist/css/eos-icons.css'\n// import '.assets/fonts/Lato/Lato-Regular.ttf'\n\nimport Navigation from './components/Navigation'\nimport Home from './components/Home'\nimport Footer from './components/Footer'\nimport CreateMenu from './components/CreateMenu'\nimport HowItworks from './components/HowItWorks'\nimport QrContainer from './components/QrContainter'\n\nfunction App() {\n  return (\n    <div className='App'>\n        <div>\n          <HashRouter>\n            <Navigation />\n            <Switch>\n\n              <Route exact path='/' children={<Home />} />\n              <Route exact path='/create'  children={<CreateMenu />} />\n              <Route exact path='/how-it-works' children={<HowItworks />} />\n              <Route path='/qr/:menuId' children={<QrContainer />}/>\n            </Switch>\n\n          </HashRouter>\n        </div>\n        <Footer />\n      </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}