{"version":3,"sources":["components/Dropdown/Dropdown.module.scss","assets/images/grub.live-logo.svg","assets/images/grub.live-logo-yellow.svg","components/Dropdown/Dropdown.js","components/Navigation.js","components/Footer.js","components/Loader.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dropdown","text","children","class","styles","dropdown","className","dropdownContent","React","memo","to","src","logo","alt","style","margin","yellowLogo","display","justifyContent","Home","lazy","CreateMenu","HowItWorks","QrDownload","About","Contact","RegisterPartner","RegisterRestaurant","DealTracker","DealStatus","Router","fallback","exact","path","component","edit","ReactGA","initialize","App","useEffect","pageview","window","location","pathname","search","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8412e62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__2ms-9\",\"dropdownContent\":\"Dropdown_dropdownContent__3v-qe\"};","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo.3b6b4ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo-yellow.8cd86dd6.svg\";","import React from 'react'\nimport styles from './Dropdown.module.scss'\n\nconst Dropdown = ({text, children}) => {\n  return (\n    <div class={styles.dropdown}>\n      <span>{text} <i className='eos-icons'>arrow_drop_down</i></span>\n      <div class={styles.dropdownContent}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Dropdown","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport logo from '../assets/images/grub.live-logo.svg'\nimport Dropdown from './Dropdown/Dropdown'\n\n\nconst Navigation = () => {\n  \n  return (\n    <div>\n  \n      <nav className=\"navbar\">\n      <Link to='/' className='nav-item'>\n        <div>\n          <img className='logo' src={logo} alt='Grub.live logo'  />\n        </div>\n      </Link>\n      <div className='nav-item' style={{margin: '16px 16px 0px 0px'}}>\n        \n        <Dropdown text=\"Restaurants\"> \n          <Link to='/register/restaurant'><div className='hyperlink nav-item'>Register Restaurant</div></Link>\n          <Link to='/create'><div className='hyperlink nav-item'>Create Menu</div></Link>\n          <Link to='/how-it-works'><div className='hyperlink nav-item'>How it works?</div></Link>\n        </Dropdown>\n        <Dropdown text=\"Partners\"> \n          <Link to='/register/partner'><div className='hyperlink nav-item'>Sign Up</div></Link>\n          <Link to='/register/restaurant'><div className='hyperlink nav-item'>Register Restaurant</div></Link>\n          <Link to='/track'><div className='hyperlink nav-item'>Track Deals</div></Link>\n        </Dropdown>\n        \n        {/* <Link to='/create'>\n          <button className='black-yellow nav-item'>\n            Create Menu\n          </button>\n        </Link> */}\n      </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default React.memo(Navigation)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport yellowLogo from \"../assets/images/grub.live-logo-yellow.svg\";\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <img src={yellowLogo} alt=\"Grub.live logo\" className=\"logo\"></img>\n        <div>Rejuvenating the dining experience.</div>\n      </div>\n      <div className=\"footer-links\">\n        <Link to=\"/contact\">\n          <div className=\"footer-item hyperlink-invert\">Contact Us</div>\n        </Link>\n        <Link to=\"/how-it-works\">\n          <div className=\"footer-item hyperlink-invert\">How it works</div>\n        </Link>\n        <Link to=\"/about\">\n          <div className=\"footer-item hyperlink-invert\">About Us</div>\n        </Link>\n      </div>\n      <br></br>\n      <br></br>\n      <span>Made with ❤ in India</span>\n      <br></br>\n      <span>© 2020 Grub.live</span>\n    </footer>\n  );\n};\n\nexport default React.memo(Footer);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <h1>...Loading</h1>\n    </div>\n  );\n};\n\nexport default React.memo(Loader);\n","import React, { Suspense, lazy } from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Navigation from \"../components/Navigation\";\nimport Footer from \"../components/Footer\";\nimport Loader from \"../components/Loader\";\n// import asyncComponents from \"./asyncComponents\";\n\nconst Home = lazy(() => import(\"../pages/Home/Home\"));\nconst CreateMenu = lazy(() => import(\"../pages/CreateMenu/CreateMenu\"));\nconst HowItWorks = lazy(() => import(\"../pages/HowItWorks/HowItWorks\"));\nconst QrDownload = lazy(() => import(\"../pages/QrDownload/QrDownload\"));\nconst About = lazy(() => import(\"../pages/About/About\"));\nconst Contact = lazy(() => import(\"../pages/Contact/Contact\"));\nconst RegisterPartner = lazy(() =>import(\"../pages/Register/RegisterPartner\"));\nconst RegisterRestaurant = lazy(() => import(\"../pages/Register/RegisterRestaurant\"))\nconst DealTracker = lazy(() => import('../pages/DealTracker/DealTracker'))\nconst DealStatus = lazy(() => import('../pages/DealTracker/DealStatus'))\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Navigation />\n      {/* TODO: Make a custom component for fallback  */}\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/create\" component={CreateMenu} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/how-it-works\" component={HowItWorks} />\n          <Route exact path=\"/qr/:menuId\" component={QrDownload} />\n          <Route path=\"/edit/:menuId/:hash\">\n            <CreateMenu edit />\n          </Route>\n          <Route exact path=\"/qr/edit/:menuId\">\n            <QrDownload edit />\n          </Route>\n          <Route exact  path=\"/register/restaurant\" component={RegisterRestaurant} />\n          <Route exact  path=\"/register/partner\" component={RegisterPartner} />\n          <Route exact  path=\"/track\" component={DealTracker} />\n          <Route exact path=\"/track/:partnerCode\" component={DealStatus} />\n        </Switch>\n      </Suspense>\n\n      <Footer />\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport \"./assets/scss/index.scss\";\nimport \"../node_modules/eos-icons/dist/css/eos-icons.css\";\nimport Router from \"./routes\";\n// import '.assets/fonts/Lato/Lato-Regular.ttf'\n\nReactGA.initialize(\"UA-182081513-1\");\n\nfunction App() {\n  useEffect(() => {\n    // This line will trigger on a route change\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Router />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}