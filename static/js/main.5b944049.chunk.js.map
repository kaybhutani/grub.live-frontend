{"version":3,"sources":["assets/images/three_dots_loading.svg","assets/images/grub.live-logo.svg","assets/images/mobile-qr-menu.svg","assets/images/grub.live-logo-yellow.svg","assets/images/HowItWorks/step1.svg","assets/images/HowItWorks/step2.svg","assets/images/HowItWorks/step3.svg","assets/images/HowItWorks/step5.svg","components/Navigation.js","components/Home.js","components/Footer.js","components/EditMenu.js","components/PreviewRestaurantMenu.js","components/PreviewMenu.js","components/CreateMenu.js","components/HowItWorks.js","components/QrContainter.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","to","className","src","logo","alt","Home","useState","featureOpen","setFeatureOpen","name","description","map","feature","key","onClick","openFeature","mobileQrMenu","Footer","yellowLogo","EditMenu","props","edit","menuId","hash","restaurantDetails","setRestaurantDetails","saveDraft","setSaveDraft","submitState","setSubmitState","addItem","categoryKey","temp","menu","categories","items","push","itemName","itemPrice","itemOnChange","itemType","e","itemKey","target","value","handleKeyDown","keyCode","preventDefault","style","float","localStorage","getItem","JSON","parse","color","restaurantName","dummyRestaurantDetails","disabled","required","placeholder","onChange","changeRestaurantTitle","defaultValue","type","accept","uploadedFile","files","size","alert","reader","FileReader","readAsDataURL","onloadend","result","console","log","updateLogo","emailId","changeEmailId","element","splice","deleteCategory","onKeyDown","title","updateTitle","item","display","deleteItem","addCategory","setItem","stringify","window","requestOptions","method","headers","body","apiEndPoint","apiBaseUrl","fetch","then","response","json","data","success","removeItem","redirectLocation","id","location","catch","err","submitMenu","PreviewRestaurantMenu","textAlign","fontSize","margin","PreviewMenu","ReactGA","initialize","CreateMenu","dataFetched","setDataFetched","editDataCorrect","setEditDataCorrect","useParams","loadingIcon","getCreateMenuComponent","StepRight","no","head","imageURL","StepLeft","HowItWorks","Step1","Step2","Step3","Step5","QrContainer","qrSticker","setQrSticker","sticker","url","marginBottom","href","textDecoration","download","About","App","useEffect","pageview","pathname","search","exact","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0JAAAA,EAAOC,QAAU,IAA0B,gD,sBCA3CD,EAAOC,QAAU,IAA0B,4C,iBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,mD,2iCCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,mLC6B5BC,EAxBI,WAEjB,OACE,6BAEE,6BACA,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,YACrB,6BACE,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,qBAGzC,yBAAKH,UAAU,kBACb,kBAAC,IAAD,CAAMD,GAAG,iBAAgB,yBAAKC,UAAU,sBAAf,kBACzB,kBAAC,IAAD,CAAMD,GAAG,WACP,4BAAQC,UAAU,yBAAlB,oB,wBCwEKI,EAvFF,WAAO,IAAD,EAEqBC,mBAAS,EAAC,EAAM,IAFrC,mBAEVC,EAFU,KAEGC,EAFH,KAqCjB,OACE,yBAAKP,UAAU,aAEb,yBAAKA,UAAU,UAEb,oCAAW,IAAX,6BAAyC,6BAAzC,wCACA,yBAAKA,UAAU,mBAvCJ,CACf,CACEQ,KAAM,kBACNC,YAAY,gKAEd,CACED,KAAK,WACLC,YAAY,iGAEd,CACED,KAAK,yBACLC,YAAY,+HAEd,CACED,KAAK,iBACLC,YAAY,wHAEd,CACED,KAAK,0BACLC,YAAY,qEAuBGC,KAAI,SAACC,EAASC,GACrB,OACE,yBAAKZ,UAAU,UAAUY,IAAKA,GAC5B,4BAAQC,QAAS,kBApBb,SAACD,GAChBN,EAAY,KAAKM,EAKpBL,EAAe,EAAC,EAAMK,IAJpBL,EAAe,EAAC,GAAQ,IAkBWO,CAAYF,IAAMZ,UAAU,YAAW,4BAAKW,EAAQH,KAAK,uBAAGR,UAAU,aAAcM,EAAY,IAAMA,EAAY,KAAKM,EAApC,8CAA5C,KAA9D,KAIA,uBAAGZ,UAAS,cAAUM,EAAY,IAAMA,EAAY,KAAKM,EAAO,KAAO,QAAUD,EAAQF,kBAUnG,yBAAKT,UAAU,aACb,yBAAMC,IAAKc,IAAcZ,IAAI,MAE/B,6BACE,kBAAC,IAAD,CAAMJ,GAAG,iBACP,4BAAQC,UAAU,uBAAlB,cAAmD,uBAAGA,UAAU,aAAb,0BAErD,6BACA,kBAAC,IAAD,CAAMD,GAAG,WACP,4BAAQC,UAAU,gBAAlB,oB,iBCjDGgB,EAvBA,WAGb,OACE,gCACI,6BACE,yBAAKf,IAAKgB,IAAYd,IAAI,iBAAiBH,UAAU,SACrD,qEAEF,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,YAAW,yBAAKC,UAAU,gCAAf,eACpB,kBAAC,IAAD,CAAMD,GAAG,iBAAgB,yBAAKC,UAAU,gCAAf,iBACzB,kBAAC,IAAD,CAAMD,GAAG,aAAY,yBAAKC,UAAU,gCAAf,aACrB,kBAAC,IAAD,CAAMD,GAAG,UAAS,yBAAKC,UAAU,gCAAf,cAEpB,6BACA,6BACF,2DAAiC,6BACjC,uD,uBCgQSkB,EAjRE,SAACC,GAAW,IAEpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,OAAQC,EAAQH,EAARG,KACfC,EAAoBJ,EAAMI,kBAC1BC,EAAuBL,EAAMK,qBAJT,EAOQnB,oBAAS,GAPjB,mBAOnBoB,EAPmB,KAORC,EAPQ,OASarB,oBAAS,GATtB,mBASnBsB,EATmB,KASNC,EATM,KA0DpBC,EAAU,SAACC,GACf,IAAMC,EAAI,eAAOR,GACjBQ,EAAKC,KAAKC,WAAWH,GAAaI,MAAMC,KAAK,CAC3CC,SAAU,GACVC,UAAW,KAEbb,EAAqBO,IASjBO,EAAe,SAACC,EAAUC,EAAGV,EAAaW,GAC9C,IAAMV,EAAI,eAAOR,GACJ,SAAbgB,EACAR,EAAKC,KAAKC,WAAWH,GAAaI,MAAMO,GAASL,SAAWI,EAAEE,OAAOC,MAErEZ,EAAKC,KAAKC,WAAWH,GAAaI,MAAMO,GAASJ,UAAYG,EAAEE,OAAOC,MACtEnB,EAAqBO,IAuBjBa,EAAgB,SAACJ,EAAGV,GACP,KAAdU,EAAEK,UAEDL,EAAEM,iBACFjB,EAAQC,KAsDd,OACE,yBAAK9B,UAAU,aAOb,yCAAc,uBAAGA,UAAU,aAAb,SACd,iGACA,yBAAK+C,MAAO,CAACC,MAAO,UAEhBC,aAAaC,QAAQ,qBACnB,4BAAQrC,QAAS,kBAAMW,EAAqB2B,KAAKC,MAAMH,aAAaC,QAAQ,wBAAwBH,MAAO,CAACM,MAAO,WAAYrD,UAAU,sBAAzI,cACa,uBAAGA,UAAU,aAAb,sBAGb,qCAEHuB,EAAkB+B,eACnB,qCAEA,4BAAQzC,QAAS,kBAAMW,EAAqB+B,MAAyBR,MAAO,CAACM,MAAO,WAAYrD,UAAU,sBAA1G,qBACoB,uBAAGA,UAAU,aAAb,cAKtB,6BACA,6BAEA,8BACA,yBAAKA,UAAU,cACb,iDACA,2BAAOwD,SAAUpC,EAAMZ,KAAK,iBAAiBiD,UAAU,EAAMzD,UAAU,aAAa0D,YAAY,6BAA6BC,SAAW,SAAAnB,GAAC,OAxLjH,SAACA,GAE7B,IAAMT,EAAI,eAAQR,GAClBQ,EAAKuB,eAAkBd,EAAEE,OAAOC,MAChCnB,EAAqBO,GAoL4H6B,CAAsBpB,IAAIqB,aAActC,EAAkB+B,iBACvM,4CACA,2BAAOE,SAAUpC,EAAM0C,KAAK,OAAOC,OAAO,UAAUJ,SAAU,SAAAnB,GAAC,OAtKlD,SAACA,GAClB,IAAMwB,EAAexB,EAAEE,OAAOuB,MAAM,GACpC,GAAGD,EAAc,CACf,GAAGA,EAAaE,KAAO,IAErB,YADAC,MAAM,oDAIR,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,UAAY,WAEnB,IAAMxC,EAAI,eAAOR,GACjBQ,EAAK7B,KAAQkE,EAAOI,OACpBC,QAAQC,IAAIN,EAAOI,QACnBhD,EAAqBO,KAuJgD4C,CAAWnC,MAC9E,6EACA,2BAAOgB,SAAUpC,EAAM0C,KAAK,QAAQL,UAAU,EAAMzD,UAAU,aAAa0D,YAAY,6BAA6BC,SAAW,SAAAnB,GAAC,OApLhH,SAACA,GAErB,IAAMT,EAAI,eAAQR,GAClBQ,EAAK6C,QAAWpC,EAAEE,OAAOC,MACzBnB,EAAqBO,GAgLmH8C,CAAcrC,IAAIqB,aAActC,EAAkBqD,WAIvLrD,EAAkBS,KAAKC,WAAWvB,KAAI,SAACoE,EAAShD,GAC9C,OAEA,yBAAK9B,UAAU,aAAaY,IAAKkB,GAC/B,uBAAGjB,QAAS,kBA9GE,SAACiB,GACtB,IAAMC,EAAI,eAAOR,GACjBQ,EAAKC,KAAKC,WAAW8C,OAAOjD,EAAa,GACzCN,EAAqBO,GA2GIiD,CAAelD,IAAciB,MAAO,CAACC,MAAO,SAAUhD,UAAU,yBAAlF,SACD,oCACA,2BAAOyD,UAAU,EAAMwB,UAAW,SAACzC,GAAD,OAAOI,EAAcJ,EAAGV,IAAc+B,aAActC,EAAkBS,KAAKC,WAAWH,GAAaoD,MAAOlF,UAAU,aAAa2D,SAAU,SAAAnB,GAAC,OA5JlK,SAACA,EAAG5B,GACtB,IAAMmB,EAAI,eAAOR,GACjBQ,EAAKC,KAAKC,WAAWrB,GAAKsE,MAAQ1C,EAAEE,OAAOC,MAC3CnB,EAAqBO,GAyJmKoD,CAAY3C,EAAEV,IAAc4B,YAAY,0BAC1N,6BAAS,6BACT,6BAEInC,EAAkBS,KAAKC,WAAWH,GAAaI,MAAMxB,KAAI,SAAC0E,EAAM3C,GAC9D,OACE,yBAAK7B,IAAO6B,GACV,yBAAKM,MAAO,CAACsC,QAAS,iBACpB,wCACA,2BAAO5B,UAAU,EAAME,SAAY,SAACnB,GAAD,OAAOF,EAAa,OAAQE,EAAGV,EAAaW,IAAUoB,aAActC,EAAkBS,KAAKC,WAAWH,GAAaI,MAAMO,GAASL,SAAUpC,UAAU,aAAa0D,YAAY,sBAEpN,yBAAKX,MAAO,CAACsC,QAAS,iBACpB,oCACA,2BAAO5B,UAAU,EAAMwB,UAAW,SAACzC,GAAD,OAAOI,EAAcJ,EAAGV,IAAc6B,SAAY,SAACnB,GAAD,OAAOF,EAAa,QAASE,EAAGV,EAAaW,IAAUoB,aAActC,EAAkBS,KAAKC,WAAWH,GAAaI,MAAMO,GAASJ,UAAWrC,UAAU,aAAa0D,YAAY,mCAEvQ,uBAAG7C,QAAS,kBA5JX,SAACiB,EAAaW,GAC/B,IAAMV,EAAI,eAAOR,GACjBQ,EAAKC,KAAKC,WAAWH,GAAaI,MAAM6C,OAAOtC,EAAS,GACxDjB,EAAqBO,GAyJauD,CAAWxD,EAAaW,IAAUzC,UAAU,yBAA9D,eAMV,yBAAK+C,MAAO,CAACC,MAAO,UAClB,4BAAQc,KAAK,SAAS9D,UAAU,qBAAqBa,QAAS,kBAAMgB,EAAQC,KAA5E,YAAmG,uBAAG9B,UAAU,aAAb,sBAAnG,UASN,6BAIE,yBAAK+C,MAAO,CAACC,MAAO,UAClB,4BAAQc,KAAK,SAAS9D,UAAU,qBAAqBa,QAAS,kBAlKlD,WAElB,IAAMkB,EAAI,eAAOR,GACjBQ,EAAKC,KAAKC,WAAWE,KAAM,CACzB+C,MAAO,GACPpB,KAAM,OACN5B,MAAO,KAITV,EAAqBO,GAwJqDwD,KAApE,gBAAgG,uBAAGvF,UAAU,aAAb,sBAAhG,MAEA,6BACA,6BACF,yBAAK+C,MAAO,CAACC,MAAO,UAClB,4BAAQc,KAAK,SAASjD,QAAS,SAAC2B,GAtIlCf,IACFwB,aAAauC,QAAQ,oBAAqBrC,KAAKsC,UAAUlE,IACzDG,GAAa,KAoImD1B,UAAU,gBAEhEyB,EACC,sCAAW,uBAAGzB,UAAU,aAAb,SADH,cAKf,4BAAQ8D,KAAK,SAASjD,QAAS,SAAC2B,GAAD,OAvIpB,SAAAA,GACjB,IAAIb,EAAa,CAEf,GADAC,GAAe,IACXL,EAAkBqD,UAAYrD,EAAkB+B,eAGlD,OAFA1B,GAAe,QACf8D,OAAOvB,MAAM,gDAGf,IAAMwB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM3C,KAAKsC,UAAUlE,IAGjBwE,EAAc3E,EAAK,GAAD,OAAI4E,IAAJ,wBAA8B3E,EAA9B,YAAwCC,GAAxC,UAAkD0E,IAAlD,WAGxBC,MAAMF,EAAaJ,GAChBO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAGJ,GAFAzE,GAAe,GACf6C,QAAQC,IAAI2B,GACRA,EAAKC,QAAT,CAKErD,aAAasD,WAAW,qBACxB,IAAMC,EAAmBpF,EAAK,cAAD,OAAeiF,EAAKI,IAApB,gBAAkCJ,EAAKI,IACpEf,OAAOgB,SAAWF,OALhBd,OAAOvB,MAAM,+CAOhBwC,OAAM,SAAAC,GACPnC,QAAQC,IAAIkC,GACZzC,MAAM,uBACNvC,GAAe,OAqGuBiF,IAAe7G,UAAU,gBAC5D2B,EAAW,yCCrNTmF,EA/Ce,SAAC3F,GAE7B,IAAMI,EAAoBJ,EAAMI,kBAEhC,OACE,yBAAKvB,UAAU,cAEb,yBAAM+C,MAAO,CAACgE,UAAW,WACrB,4BACGxF,EAAkBrB,KAClB,yBAAKD,IAAKsB,EAAkBrB,KAAMC,IAAI,GAAGH,UAAU,oBAEnD,uBAAGA,UAAU,YAAY+C,MAAO,CAACM,MAAO,MAAO2D,SAAU,MAAOC,OAAQ,QAAxE,gBACA1F,EAAkB+B,iBAE3B,6BACA,6BACG/B,EAAkBS,KAAKC,WAAWvB,KAAI,SAACoE,EAASlE,GAC3C,OAEA,yBAAKA,IAAKA,GACV,4BAAKkE,EAAQI,OAIX3D,EAAkBS,KAAKC,WAAWrB,GAAKsB,MAAMxB,KAAI,SAAC0E,EAAM3C,GACtD,OAAQ,yBAAK7B,IAAK6B,GAChB,uBAAGM,MAAO,CAACsC,QAAS,eAAgB4B,OAAQ,IAAK7B,EAAKhD,UACtD,uBAAGW,MAAO,CAACC,MAAO,QAASiE,OAAQ,IAAK7B,EAAK/C,WAC7C,6BACA,wCCdH6E,EAhBK,SAAC/F,GAEnB,IAAMI,EAAoBJ,EAAMI,kBAEhC,OACE,yBAAKvB,UAAU,gBACb,4CAAiB,uBAAGA,UAAU,aAAb,cACjB,gGACA,6BACA,kBAAC,EAAD,CAAuBuB,kBAAmBA,M,yBCHhD4F,IAAQC,WAAW,gBAGnB,IAuEeC,EAvEI,SAAClG,GAElB,IAF4B,EAUsBd,mBARlB,CAC9BuE,QAAS,GACTtB,eAAgB,GAChBpD,KAAM,GACN8B,KAAM,CACJC,WAAY,MAPY,mBAUrBV,EAVqB,KAUFC,EAVE,OAWUnB,oBAAS,GAXnB,mBAWrBiH,EAXqB,KAWRC,EAXQ,OAYkBlH,oBAAS,GAZ3B,mBAYrBmH,EAZqB,KAYJC,EAZI,KAatBrG,EAAOD,EAAMC,OAAQ,EAbC,EAcLsG,cAAjBrG,EAdsB,EActBA,OAAQC,EAdc,EAcdA,KACdmD,QAAQC,IAAIrD,EAAQC,GAEjBF,IAASkG,GACVrB,MAAM,GAAD,OAAID,IAAJ,mBAAyB3E,IAC3B6E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJkB,GAAe,GACZlB,EAAKC,UAEN9E,EAAqB6E,EAAKA,MAC1BoB,GAAmB,OAiC3B,OAEE,yBAAKzH,UAAU,aA9Ba,WACxB,GAAGoB,EAAM,CAEP,IAAGkG,EAMD,OACE,yBAAKtH,UAAU,eACb,yBAAKG,IAAI,GAAGH,UAAU,eAAeC,IAAK0H,OAP9C,IAAIH,EACF,OAAQ,iDAad,OACE,oCACGpG,EACA,oCAAE,2CACH,oSAA4Q,8BAAc,qCAC1R,kBAAC,EAAD,CAAUG,kBAAmBA,EAAmBC,qBAAsBA,EAAsBJ,KAAMA,EAAMC,OAAQA,EAAQC,KAAMA,IAC9H,kBAAC,EAAD,CAAaC,kBAAmBA,KAUtCqG,K,oEClEAC,EAAY,SAAC1G,GAEf,OACA,yBAAKnB,UAAU,oBACf,yBAAKA,UAAU,YACf,4BAAKmB,EAAM2G,GAAX,IAAgB3G,EAAM4G,MAClB,2BAAI5G,EAAMX,OAEd,yBAAKR,UAAU,YACX,yBAAKC,IAAKkB,EAAM6G,SAAW7H,IAAI,MAEnC,+BAKE8H,EAAW,SAAC9G,GAEd,OACI,yBAAKnB,UAAU,oBACd,yBAAKA,UAAU,aACpB,4BAAKmB,EAAM2G,GAAX,IAAgB3G,EAAM4G,MACd,2BAAI5G,EAAMX,OAEd,yBAAKR,UAAU,WACX,yBAAKC,IAAKkB,EAAM6G,SAAU7H,IAAI,MAElC,+BAqDO+H,EA9CI,WAEf,OACG,yBAAKlI,UAAU,aACX,yBAAKA,UAAU,gBACV,oEACA,4GAEL,6BACJ,kBAAC,EAAD,CACCQ,KAAK,0RACLuH,KAAK,gBACLD,GAAG,KACHE,SAAUG,MAGV,6BACA,kBAAC,EAAD,CACIJ,KAAK,uBACLvH,KAAK,wQACLsH,GAAG,KACHE,SAAUI,MAGd,6BACA,kBAAC,EAAD,CACAL,KAAK,oBACLvH,KAAK,0HACLsH,GAAG,KACHE,SAAUK,MAGV,6BACA,kBAAC,EAAD,CACAN,KAAK,mBACLvH,KAAK,uPACLsH,GAAG,KACHE,SAAUM,MAGV,+BCVOC,EApEK,SAACpH,GAAW,IAAD,EAEKd,mBAAS,MAFd,mBAEtBmI,EAFsB,KAEXC,EAFW,OAGSpI,oBAAS,GAHlB,mBAGtBiH,EAHsB,KAGTC,EAHS,KAIvBlG,EAAWqG,cAAXrG,OACFiG,GACFrB,MAAM,GAAD,OAAID,IAAJ,eAAqB3E,IACrB6E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJkB,GAAe,GACZlB,EAAKC,SAEJmC,EAAapC,EAAKqC,YAK9B,IAAMtH,EAAOD,EAAMC,KACbuH,EAAG,4BAAwBtH,GAGjC,OACE,yBAAKrB,UAAU,YAAY+C,MAAO,CAACgE,UAAW,WAE3CO,EACD,6BACKkB,EAED,6BACGpH,EACA,yBAAK2B,MAAO,CAAC6F,aAAc,QAC1B,yDACA,sFAA2D,uBAAGC,KAAMF,GAAT,QAA3D,WAED,oCACC,kDACA,+IACA,6BACA,uBAAG5F,MAAO,CAAC+F,eAAgB,QAASD,KAAML,EAAWO,SAAS,iBAAiB/I,UAAU,gBAAzF,uBACA,6BACA,6BACA,6BACA,yBAAKC,IAAKuI,EAAWrI,IAAI,aAAaH,UAAU,iBAOpD,6BACE,mDAON,yBAAKA,UAAU,eACb,iEAEA,yBAAKG,IAAI,GAAGH,UAAU,eAAeC,IAAK0H,SCpDnCqB,EAVD,WAGZ,OACE,yBAAKhJ,UAAU,eCYnBmH,IAAQC,WAAW,kBAmCJ6B,MAjCf,WAUE,OARAC,qBAAW,WAGT/B,IAAQgC,SAASzD,OAAOgB,SAAS0C,SAAW1D,OAAOgB,SAAS2C,UAE7D,IAIC,yBAAKrJ,UAAU,OACX,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,IAAIC,SAAU,kBAAC,EAAD,QAChC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAWC,SAAU,kBAAC,EAAD,QACvC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAUC,SAAU,kBAAC,EAAD,QACtC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,gBAAgBC,SAAU,kBAAC,EAAD,QAC5C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,cAAcC,SAAU,kBAAC,EAAD,QAC1C,kBAAC,IAAD,CAAOD,KAAK,sBAAsBC,SAAU,kBAAC,EAAD,CAAYpI,MAAM,MAC9D,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,mBAAmBC,SAAU,kBAAC,EAAD,CAAapI,MAAM,OAEpE,kBAAC,EAAD,UClCQqI,QACW,cAA7B/D,OAAOgB,SAASgD,UAEe,UAA7BhE,OAAOgB,SAASgD,UAEhBhE,OAAOgB,SAASgD,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEd1D,OAAM,SAAA2D,GACL7F,QAAQ6F,MAAMA,EAAMC,c","file":"static/js/main.5b944049.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/three_dots_loading.4d1c15f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo.3b6b4ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-qr-menu.05161419.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo-yellow.8cd86dd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/step1.b28f044b.svg\";","module.exports = __webpack_public_path__ + \"static/media/step2.dfebaf5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/step3.a433c4be.svg\";","module.exports = __webpack_public_path__ + \"static/media/step5.c0ff1a21.svg\";","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport logo from '../assets/images/grub.live-logo.svg'\n\n\nconst Navigation = () => {\n  \n  return (\n    <div>\n  \n      <nav>\n      <Link to='/' className='nav-item'>\n        <div>\n          <img className='logo' src={logo} alt='Grub.live logo'  />\n        </div>\n      </Link>\n      <div className='nav-item-right'>\n        <Link to='/how-it-works'><div className='hyperlink nav-item'>How it works?</div></Link>\n        <Link to='/create'>\n          <button className='black-yellow nav-item'>\n            Create Menu\n          </button>\n        </Link>\n      </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport mobileQrMenu from '../assets/images//mobile-qr-menu.svg'\nimport { Link } from 'react-router-dom'  \n\nconst Home = () => {\n\n  const [featureOpen, setFeatureOpen] = useState([true, 0])\n\n  const features = [\n    {\n      name: 'Enhances Safety',\n      description: `Virtual menu's ensures a safe outlet by avoiding any unneeded interaction with staff, especially in times of COVID-19 safeguarding both staff and customers.`\n    },\n    {\n      name: `No delay`,\n      description: `Just open and start selecting out of menu, without waiting for the staff to reach out to you.`\n    },\n    {\n      name: `Super Quick and Simple`,\n      description: `It is super quick for people to scan the QR and get the menu on all of their phones. Your menu will never fall short now :D`\n    },\n    {\n      name: `Always Updated`,\n      description: `No matter if your dishes change daily or monthly, you don't have to print menu's again! Just update it on grub.live.`\n    },\n    {\n      name: `Free and Easy to set up`,\n      description: `Our virtual menu's are and will be forever Free and easy to use!`\n    }\n    \n\n  ]\n\n  const openFeature = (key) => {\n    if(featureOpen[1]===key) {\n      setFeatureOpen([false, -1])\n      return\n    }\n\n    setFeatureOpen([true, key])\n  }\n  return (\n    <div className='container'>\n      \n      <div className='header' >\n        \n        <h1 >Free {'&'} Simple Virtual QR Menu's <br></br> Rejuvenating the dining experience.</h1>\n        <div className='header-features'>\n          \n          {\n            features.map((feature, key) => {\n              return (\n                <div className='feature' key={key}>\n                  <button onClick={() => openFeature(key)} className='btn-link'><h3>{feature.name}<i className='eos-icons'>{(featureOpen[0] && featureOpen[1]===key)?(`keyboard_arrow_down`):(`keyboard_arrow_right`) }</i> </h3> </button>\n                  {/* {(featureOpen[0] && featureOpen[1]===key)? (\n                    <p className='fadein'>{feature.description}</p>\n                  ): (<p className='fadeout'>{feature.description}</p>)} */}\n                  <p className={`fade${(featureOpen[0] && featureOpen[1]===key) ? \"in\" : \"out\"}`}>{feature.description}</p>\n                  \n                </div>\n              )\n            })\n          }\n\n          \n          \n        </div>\n        <div className='intro-img'>\n          <img  src={mobileQrMenu} alt=''></img>\n        </div>\n        <div>\n          <Link to='/how-it-works'>\n            <button className='btn-link learn-more'>Learn more <i className='eos-icons'>keyboard_arrow_right</i></button>\n          </Link>\n          <br></br>\n          <Link to='/create'>\n            <button className='black-yellow'>\n              Create Menu \n            </button>\n          </Link  >\n          {/* <button className='black-yellow'>\n            Scan Menu \n          </button> */}\n      </div>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport yellowLogo from '../assets/images/grub.live-logo-yellow.svg'\nconst Footer = () => {\n\n\n  return (\n    <footer>\n        <div>\n          <img src={yellowLogo} alt='Grub.live logo' className='logo'></img>\n          <div>Rejuvenating the dining experience.</div>\n        </div>\n        <div className='footer-links'>\n          <Link to='/contact'><div className='footer-item hyperlink-invert'>Contact Us</div></Link>\n          <Link to='/how-it-works'><div className='footer-item hyperlink-invert'>How it works</div></Link>\n          <Link to='/feedback'><div className='footer-item hyperlink-invert'>Feedback</div></Link>\n          <Link to='/about'><div className='footer-item hyperlink-invert'>About Us</div></Link>\n        </div>\n        <br></br>\n        <br></br>\n      <span>Made with ❤ in India</span><br></br>\n      <span>© 2020 Grub.live</span>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport {apiBaseUrl} from '../config.json'\n// import PreviewModal from './PreviewModal'\nimport {dummyRestaurantDetails} from '../dummyData.json'\n\nconst EditMenu = (props) => {\n  \n  const {edit, menuId, hash} = props\n  const restaurantDetails = props.restaurantDetails\n  const setRestaurantDetails = props.setRestaurantDetails\n  \n\n  const [saveDraft, setSaveDraft] = useState(false)\n  // const [previewModal, setPreviewModal] = useState(false)\n  const [submitState, setSubmitState]  = useState(false)\n  const changeRestaurantTitle = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.restaurantName =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n    \n  const changeEmailId = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.emailId =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n  \n  // const togglePreviewModal = () => {\n  //   setPreviewModal(!previewModal)\n  // }\n\n  const updateLogo = (e) => {\n    const uploadedFile = e.target.files[0]\n    if(uploadedFile) {\n      if(uploadedFile.size > 2000000) {\n        alert(\"Please upload an image with size less than 2 mb.\")\n        return;\n      }\n\n      const reader = new FileReader()\n      reader.readAsDataURL(uploadedFile)\n      reader.onloadend = () => {\n\n      const temp = {...restaurantDetails}\n      temp.logo =  reader.result\n      console.log(reader.result)\n      setRestaurantDetails(temp)\n\n      }\n    }\n    \n  }\n\n  const updateTitle = (e, key) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[key].title = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addItem = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.push({\n      itemName: \"\",\n      itemPrice: \"\"\n    })\n    setRestaurantDetails(temp)\n  }\n\n  const deleteItem = (categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.splice(itemKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const itemOnChange = (itemType, e, categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    itemType === 'name' ? \n    temp.menu.categories[categoryKey].items[itemKey].itemName = e.target.value\n    :\n    temp.menu.categories[categoryKey].items[itemKey].itemPrice = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addCategory = () => {\n\n    const temp = {...restaurantDetails}\n    temp.menu.categories.push( {\n      title: '',\n      type: 'text',\n      items: [\n\n      ]\n    }) \n    setRestaurantDetails(temp)\n\n  }\n\n  const deleteCategory = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories.splice(categoryKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const handleKeyDown = (e, categoryKey) => {\n    if(e.keyCode === 13) \n      {\n        e.preventDefault()\n        addItem(categoryKey)\n        \n      }\n  }\n\n\n\n\n  const saveDraftFunction = (e) => {\n    if(!saveDraft) {\n      localStorage.setItem('restaurantDetails', JSON.stringify(restaurantDetails))\n      setSaveDraft(true)\n    }\n  }\n\n  const submitMenu = e => {\n    if(!submitState) {\n      setSubmitState(true)  \n      if(!restaurantDetails.emailId || !restaurantDetails.restaurantName) {\n        setSubmitState(false)\n        window.alert('Restaurant name and Email Id cannot be blank')\n        return\n      }\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(restaurantDetails)\n      };\n      \n      const apiEndPoint = edit?`${apiBaseUrl}/edit/submit/${menuId}/${hash}`:`${apiBaseUrl}/submit`\n\n\n      fetch(apiEndPoint, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          setSubmitState(false)\n          console.log(data)\n          if(!data.success)\n            {\n              window.alert('Some problem occrred while creating menu')\n              return\n            }\n            localStorage.removeItem('restaurantDetails')\n            const redirectLocation = edit?`/#/qr/edit/${data.id}`:`/#/qr/${data.id }`\n            window.location = redirectLocation\n          \n        }).catch(err => {\n          console.log(err)\n          alert(`Some error occurred`)\n          setSubmitState(false)\n        });\n    }\n  }\n\n  return (\n    <div className='edit-menu'>\n      {/* {\n        previewModal ? <PreviewModal restaurantDetails={restaurantDetails} togglePreviewModal={togglePreviewModal}/>\n        :<></>\n        \n      } */}\n      \n      <h2>Edit Menu <i className='eos-icons'>edit</i></h2>\n      <p>Please enter the following details to create your Virtual QR Menu.</p>\n      <div style={{float: \"right\"}}>\n        {\n          localStorage.getItem('restaurantDetails')?\n            <button onClick={() => setRestaurantDetails(JSON.parse(localStorage.getItem('restaurantDetails')))} style={{color: '#007cbf'}} className='hyperlink btn-link'>\n              Load saved <i className='eos-icons'>system_update_alt</i>\n            </button>\n            :\n            <></>\n        }\n        {restaurantDetails.restaurantName ? \n        <></>\n        :\n        <button onClick={() => setRestaurantDetails(dummyRestaurantDetails)} style={{color: '#007cbf'}} className='hyperlink btn-link'>\n          Fill sample data  <i className='eos-icons'>keyboard</i>\n        </button>\n        }\n      </div>\n      \n      <br></br>\n      <br></br>\n      \n      <form>\n      <div className='shadow-box'>\n        <p>Name of Restaurant</p>\n        <input disabled={edit} name=\"restaurantName\" required={true} className='form-input' placeholder='Example: Moti Mahal Deluxe' onChange={ e => changeRestaurantTitle(e)} defaultValue={restaurantDetails.restaurantName}></input>\n        <p>Logo (if any)</p>\n        <input disabled={edit} type='file' accept='image/*' onChange={e => updateLogo(e)}></input>\n        <p>Email ID (You can use this to edit Menu later)</p>\n        <input disabled={edit} type=\"email\" required={true} className='form-input' placeholder='Example: johndoe@gmail.com' onChange={ e => changeEmailId(e)} defaultValue={restaurantDetails.emailId}></input>\n      </div>\n      \n\n      {restaurantDetails.menu.categories.map((element, categoryKey) => {\n         return (\n         \n         <div className='shadow-box' key={categoryKey}>\n           <i onClick={() => deleteCategory(categoryKey)} style={{float: 'right'}} className='eos-icons delete-icon'>close</i>\n          <p>Title</p>\n          <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].title} className='form-input' onChange={e => updateTitle(e,categoryKey)} placeholder='Example: Chinese food'></input>\n          <br></br><br></br>\n          <div>\n            {\n              restaurantDetails.menu.categories[categoryKey].items.map((item, itemKey) => {\n                return (\n                  <div key = {itemKey}>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Item Name</p>\n                      <input required={true} onChange = {(e) => itemOnChange('name', e, categoryKey, itemKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].items[itemKey].itemName} className='form-input' placeholder='Eg: French Fries'></input>\n                    </div>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Price</p>\n                      <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} onChange = {(e) => itemOnChange('price', e, categoryKey, itemKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].items[itemKey].itemPrice} className='form-input' placeholder='Eg: Half: $4.99 , Full: $9.99'></input>\n                    </div>\n                    <i onClick={() => deleteItem(categoryKey, itemKey)} className='eos-icons delete-icon'>delete</i>\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{float: \"right\"}}>\n            <button type='button' className='hyperlink btn-link' onClick={() => addItem(categoryKey)}>Add Item <i className='eos-icons'>add_circle_outline</i> </button>\n          </div>\n\n\n        </div>\n        )\n        \n      })}\n            \n      <div>\n        {/* <div style={{float: \"right\"}}>\n          <button type='button' onClick={() => togglePreviewModal()} className='hyperlink btn-link preview-btn' >Preview <i className='eos-icons'>visibility</i> </button>\n        </div> */}\n        <div style={{float: \"right\"}}>\n          <button type='button' className='hyperlink btn-link' onClick={() => addCategory()}>Add Category <i className='eos-icons'>add_circle_outline</i> </button>\n        </div>\n          <br></br>\n          <br></br>\n        <div style={{float: \"right\"}}>\n          <button type='button' onClick={(e) => saveDraftFunction(e)} className='black-yellow'>\n              {\n                saveDraft?\n                (<div>Saved <i className='eos-icons'>done</i></div>):\n                (`Save Draft`)\n              }\n          </button>\n          <button type='button' onClick={(e) => submitMenu(e)} className='black-yellow'>\n            {submitState ? (\n                `Generating...`\n            ): (`Generate QR Menu`)}\n            \n          </button>\n        </div>\n      </div>\n\n      </form>\n\n    </div>\n  )\n\n}\n\n\nexport default EditMenu\n","import React from 'react'\n\nconst PreviewRestaurantMenu = (props) => {\n\n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='shadow-box'>\n\n      <div  style={{textAlign: \"center\"}}>\n          <h1>\n            {restaurantDetails.logo?\n            (<img src={restaurantDetails.logo} alt='' className='restaurant-logo'></img>)\n            :\n            (<i className='eos-icons' style={{color: 'red', fontSize: '1em', margin: '8px'}}>local_dining</i>)}   \n            {restaurantDetails.restaurantName}</h1>\n        </div> \n    <br></br>\n    <div>\n      {restaurantDetails.menu.categories.map((element, key) => {\n            return (\n            \n            <div key={key}>\n            <h2>{element.title}</h2>\n            \n\n            {\n              restaurantDetails.menu.categories[key].items.map((item, itemKey) => {\n                return (<div key={itemKey}>\n                  <p style={{display: \"inline-block\", margin: 0}}>{item.itemName}</p>\n                  <p style={{float: \"right\", margin: 0}}>{item.itemPrice}</p>\n                  <br></br>\n                  <br></br>  \n                </div>\n                \n                )\n              })\n            }\n            \n          \n          </div>)\n          \n        })}  \n    </div>\n    </div>\n  )\n\n}\n\nexport default PreviewRestaurantMenu","import React from 'react'\nimport PreviewRestaurantMenu from './PreviewRestaurantMenu'\nconst PreviewMenu = (props) => {\n  \n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='preview-menu'>\n      <h2>Preview Menu <i className='eos-icons'>slideshow</i></h2>\n      <p>Once done, click on Generate QR Menu to create your Virtual Menu.</p>\n      <br></br>\n      <PreviewRestaurantMenu restaurantDetails={restaurantDetails} />\n    </div>\n  )\n\n}\n\n\nexport default PreviewMenu","import React, { useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport EditMenu from './EditMenu'\nimport PreviewMenu from './PreviewMenu'\nimport loadingIcon from '../assets/images/three_dots_loading.svg'\nimport {apiBaseUrl} from '../config.json'\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('G-0BPQRCHTXK');\n\n\nconst CreateMenu = (props) => {\n\n  const sampleRestaurantDetails = {\n    emailId: \"\",\n    restaurantName: \"\",\n    logo: \"\",\n    menu: {\n      categories: [ ]\n    }\n  }\n  const [restaurantDetails, setRestaurantDetails] = useState(sampleRestaurantDetails)\n  const [dataFetched, setDataFetched] = useState(false)\n  const [editDataCorrect, setEditDataCorrect] = useState(false)\n  const edit = props.edit || false\n  let { menuId, hash } = useParams()\n  console.log(menuId, hash)\n\n  if(edit && !dataFetched) {\n    fetch(`${apiBaseUrl}/view?q=${menuId}`)\n      .then(response => response.json())\n      .then(data => {\n        setDataFetched(true)\n        if(data.success)\n        {\n          setRestaurantDetails(data.data)\n          setEditDataCorrect(true)\n        }\n    });\n  }\n  \nconst getCreateMenuComponent = (()=> {\n        if(edit) {\n\n          if(dataFetched) {\n            if(!editDataCorrect) {\n              return (<h2>Invalid Edit link</h2>)\n            }\n          }\n          else {\n            return (\n              <div className='loading-div'>\n                <img alt='' className='loading-icon' src={loadingIcon} />\n              </div>\n            )\n          }\n\n        }\n        \n        return (\n          <>\n            {edit?\n            (<><h2>Update Menu</h2>\n            <p>Any changes made here will be updated in your old menu only. You can add, delete or update the categories, items and price. The Restaurant name, logo and email ID cannot be changed for now. You don't have to worry for new QR code , the link and QR remains same.</p><br></br></>):<></>}\n            <EditMenu restaurantDetails={restaurantDetails} setRestaurantDetails={setRestaurantDetails} edit={edit} menuId={menuId} hash={hash}/>\n            <PreviewMenu restaurantDetails={restaurantDetails} />\n          </>\n        )\n      })\n  return (\n\n    <div className='container'>\n\n      {\n\n      getCreateMenuComponent()\n    }\n      \n    </div>\n  )\n}\n\nexport default CreateMenu","import React from 'react'\nimport Step1 from '../assets/images/HowItWorks/step1.svg'\nimport Step2 from '../assets/images/HowItWorks/step2.svg'\nimport Step3 from '../assets/images/HowItWorks/step3.svg'\n// import Step4 from '../assets/images/HowItWorks/Step4.png'\nimport Step5 from '../assets/images/HowItWorks/step5.svg'\n\n\n\nconst StepRight = (props) =>{\n\n    return(\n    <div className=\"how-it-works-div\">\n    <div className='textLeft'>\n    <h1>{props.no} {props.head}</h1>\n        <p>{props.name}</p>\n    </div> \n    <div className=\"imgRight\">\n        <img src={props.imageURL}  alt=''></img>\n    </div>\n    <br></br>     \n    </div>\n    )\n}\n\nconst StepLeft = (props) =>{\n\n    return(\n        <div className=\"how-it-works-div\">\n         <div className='textRight'>\n    <h1>{props.no} {props.head}</h1>\n            <p>{props.name}</p>\n        </div> \n        <div className=\"imgLeft\">\n            <img src={props.imageURL} alt=''></img>\n        </div>  \n        <br></br>    \n        </div>\n        )\n  \n}\n\n\nconst HowItWorks = () =>{\n\n    return(\n       <div className='container'>\n           <div className='align-center'>\n                <h2>How does it works for Restaurant's ?</h2>\n                <p>Learn how Restaurant's can adapt Contact-less Menu's in just 4 simple steps!</p>\n           </div>\n           <br></br>\n       <StepRight\n        name=\"Restaurant owners enter the name of Restaurant, upload the logo (if there is any) and your Email ID which you can use to edit these menu's Later! If you are a lazy person like us, you can use the Fill dummy data button to create a beautiful menu with dummy data and just edit it!\"\n        head=\"Name and Logo\"\n        no=\"1.\"\n        imageURL={Step1}\n        \n         />\n        <br></br>\n        <StepLeft \n            head=\"Categories and Items\"\n            name=\"Create Food Category (example: Chinese,South Indian etc.) and start Adding items to it (example: French fries, burgers). You also have to add the corresponding price. Price can be text and in any currency. You can also use something like Half: $2.99, Full $3.99\"\n            no=\"2.\"\n            imageURL={Step2}\n\n         />\n        <br></br>\n        <StepRight\n        head=\"Preview your Menu\"\n        name=\"You can watch your menu change Live in the preview section. Just when you think it's perfect, go ahead and Generate it.\"\n        no=\"3.\"\n        imageURL={Step3}\n        \n         />\n        <br></br>\n        <StepLeft\n        head=\"Generate QR Menu\"\n        name=\"Once finalized, click on Generate QR Menu and wait for the QR code to be generated. You can download this QR code sticker and paste it on the tables, doors or wherever you want. User's have to just open the camera and scan this to see the menu.\"\n        no=\"4.\"\n        imageURL={Step5}\n        \n         />\n        <br></br>\n\n         </div>\n    )\n}\n\nexport default HowItWorks","import React, {useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport loadingIcon from '../assets/images/three_dots_loading.svg'\nimport {apiBaseUrl} from '../config.json'\n\nconst QrContainer = (props) => {\n\n  const [qrSticker, setQrSticker] = useState(null)\n  const [dataFetched, setDataFetched] = useState(false)\n  let { menuId } = useParams()\n  if(!dataFetched) {\n    fetch(`${apiBaseUrl}/qr/${menuId}`)\n        .then(response => response.json())\n        .then(data => {\n          setDataFetched(true)\n          if(data.success)\n            {\n              setQrSticker(data.sticker)\n            }\n        });\n  }\n\n  const edit = props.edit\n  const url = `https://glqr.me/#/${menuId}`\n\n\n  return (\n    <div className='container' style={{textAlign: \"center\"}}>\n      \n      {dataFetched ? (\n      <div>\n          {qrSticker?\n        (\n          <div>\n            {edit? \n            (<div style={{marginBottom: '40%'}}>\n              <h2>Menu edited successfully!</h2>\n              <p>Your menu has been successfully updated in the previous <a href={url}>link</a> only.</p>\n            </div>):\n            (<>\n              <h2>QR Menu Generated!</h2>\n              <p>You are ready to adapt contactless dining. Download your QR code sticker and paste it on the table, window, etc.</p>\n              <br></br>\n              <a style={{textDecoration: 'none'}} href={qrSticker} download='qr-sticker.png' className='black-yellow'>Download QR Sticker</a>\n              <br></br>\n              <br></br>\n              <br></br>\n              <img src={qrSticker} alt='qr sticker' className='qr-sticker'></img>\n              {/* <QrImage url={url} restaurantDetails = {restaurantDetails}/> */}\n            </>) \n          }\n          </div>\n        ):\n        (\n          <div>\n            <h1>Incorrect Menu Id</h1>\n          </div>\n        )}\n      </div>\n        )\n      :\n      (\n      <div className='loading-div'>\n        <h2>Generating QR sticker for you ...</h2>\n      \n        <img alt='' className='loading-icon' src={loadingIcon} />\n      </div>\n      )}\n\n    </div>\n  )\n}\n\nexport default QrContainer\n\n","import React from 'react'\n\n\nconst About = () => {\n\n\n  return (\n    <div className='container'>\n\n    </div>\n  )\n}\n\nexport default About","import React, {useEffect} from 'react'\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\"\n\nimport './assets/scss/index.scss'\nimport '../node_modules/eos-icons/dist/css/eos-icons.css'\n// import '.assets/fonts/Lato/Lato-Regular.ttf'\n\nimport Navigation from './components/Navigation'\nimport Home from './components/Home'\nimport Footer from './components/Footer'\nimport CreateMenu from './components/CreateMenu'\nimport HowItworks from './components/HowItWorks'\nimport QrContainer from './components/QrContainter'\nimport ReactGA from 'react-ga';\nimport About from './pages/About'\nReactGA.initialize('UA-182081513-1');\n\nfunction App() {\n\n  useEffect( () => {\n\n    // This line will trigger on a route change\n    ReactGA.pageview(window.location.pathname + window.location.search); \n\n}, []);\n\n\n  return (\n    <div className='App'>\n        <div>\n          <HashRouter>\n            <Navigation />\n            <Switch>\n\n              <Route exact path='/' children={<Home />} />\n              <Route exact path='/create'  children={<CreateMenu />} />\n              <Route exact path='/about'  children={<About />} />\n              <Route exact path='/how-it-works' children={<HowItworks />} />\n              <Route exact path='/qr/:menuId' children={<QrContainer />}/>\n              <Route path='/edit/:menuId/:hash' children={<CreateMenu edit={true}/>}/>\n              <Route exact path='/qr/edit/:menuId' children={<QrContainer edit={true}/>}/>\n            </Switch>\n            <Footer />\n          </HashRouter>\n        </div>\n        \n      </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}