{"version":3,"sources":["assets/images/grub.live-logo.svg","assets/images/mobile-qr-menu.svg","assets/images/grub.live-logo-yellow.svg","assets/images/HowItWorks/Step1.png","assets/images/HowItWorks/Step2.png","assets/images/HowItWorks/Step3.png","assets/images/HowItWorks/Step4.png","assets/images/HowItWorks/Step5.png","assets/images/three_dots_loading.svg","components/NavLink.js","components/Navigation.js","components/Home.js","components/Footer.js","components/PreviewRestaurantMenu.js","components/PreviewModal.js","components/EditMenu.js","components/PreviewMenu.js","components/CreateMenu.js","components/HowItWorks.js","components/QrImage.js","components/QrContainter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavLink","props","getProps","className","isCurrent","Navigation","to","src","logo","alt","Home","useState","featureOpen","setFeatureOpen","name","description","map","feature","key","onClick","openFeature","mobileQrMenu","Footer","yellowLogo","PreviewRestaurantMenu","restaurantDetails","style","textAlign","color","fontSize","margin","restaurantName","menu","categories","element","title","items","item","itemKey","display","itemName","float","itemPrice","PreviewModal","EditMenu","setRestaurantDetails","previewModal","setPreviewModal","submitState","setSubmitState","addItem","categoryKey","temp","push","itemOnChange","itemType","e","target","value","handleKeyDown","keyCode","preventDefault","dummyRestaurantDetails","required","placeholder","onChange","changeRestaurantTitle","defaultValue","type","accept","uploadedFile","files","size","alert","reader","FileReader","readAsDataURL","onloadend","result","console","log","updateLogo","emailId","changeEmailId","splice","deleteCategory","onKeyDown","updateTitle","deleteItem","addCategory","window","requestOptions","method","headers","body","JSON","stringify","fetch","apiBaseUrl","then","response","json","data","success","location","id","submitMenu","PreviewMenu","CreateMenu","StepRight","no","imageURL","StepLeft","HowItWorks","Step1","Step2","Step3","Step4","Step5","QrImage","url","QrContainer","dataFetched","setDataFetched","menuId","useParams","htmlToImage","document","getElementById","dataUrl","svgImg","createElement","href","setAttribute","click","marginBottom","loadingIcon","App","exact","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb27374c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grub.live-logo.3b6b4ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-qr-menu.a848aa64.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo-yellow.8cd86dd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Step1.1db91c17.png\";","module.exports = __webpack_public_path__ + \"static/media/Step2.721d4588.png\";","module.exports = __webpack_public_path__ + \"static/media/Step3.76cd4818.png\";","module.exports = __webpack_public_path__ + \"static/media/Step4.2eb10e55.png\";","module.exports = __webpack_public_path__ + \"static/media/Step5.4843d07a.png\";","module.exports = __webpack_public_path__ + \"static/media/three_dots_loading.4d1c15f3.svg\";","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst NavLink = (props) => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        className: isCurrent ? 'active' : ''\n      }\n    }}\n  />\n)\n\nexport default NavLink","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport logo from '../assets/images/grub.live-logo.svg'\nimport NavLink from './NavLink'\n\n\nconst Navigation = () => {\n  \n  return (\n    <div>\n  \n      <nav>\n      <Link to='/' className='nav-item'>\n        <div>\n          <img className='logo' src={logo} alt='Grub.live logo'  />\n        </div>\n      </Link>\n      <div className='nav-item-right'>\n        <NavLink to='/how-it-works'><div className='hyperlink nav-item'>How it works?</div></NavLink>\n        <NavLink to='/create'>\n          <button className='black-yellow nav-item'>\n            Create Menu\n          </button>\n        </NavLink>\n      </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport mobileQrMenu from '../assets/images//mobile-qr-menu.svg'\nimport NavLink from './NavLink'\nimport { Link } from 'react-router-dom'  \n\nconst Home = () => {\n\n  const [featureOpen, setFeatureOpen] = useState([true, 0])\n\n  const features = [\n    {\n      name: 'Enhances Safety',\n      description: `Virtual menu's ensures a safe outlet by avoiding any unneeded interaction with staff, especially in times of COVID-19 safeguarding both staff and customers.`\n    },\n    {\n      name: `No delay`,\n      description: `Just open and start selecting out of menu, without waiting for the staff to reach out to you.`\n    },\n    {\n      name: `Super Quick and Simple`,\n      description: `It is super quick for people to scan the QR and get the menu on all of their phones. Your menu will never fall short now :D`\n    },\n    {\n      name: `Always Updated`,\n      description: `No matter if your dishes change daily or monthly, you don't have to print menu's again! Just update it on grub.live.`\n    },\n    {\n      name: `Free and Easy to set up`,\n      description: `Our virtual menu's are and will be forever Free and easy to use!`\n    }\n    \n\n  ]\n\n  const openFeature = (key) => {\n    if(featureOpen[1]===key) {\n      setFeatureOpen([false, -1])\n      return\n    }\n\n    setFeatureOpen([true, key])\n  }\n  return (\n    <div className='container'>\n      \n      <div className='header' >\n        \n        <h1 >Free {'&'} Simple Virtual QR Menu's <br></br> Rejuvenating the dining experience.</h1>\n        <div className='header-features'>\n          \n          {\n            features.map((feature, key) => {\n              return (\n                <div className='feature' key={key}>\n                  <button onClick={() => openFeature(key)} className='btn-link'><h3>{feature.name}<i className='eos-icons'>{(featureOpen[0] && featureOpen[1]===key)?(`keyboard_arrow_down`):(`keyboard_arrow_right`) }</i> </h3> </button>\n                  {/* {(featureOpen[0] && featureOpen[1]===key)? (\n                    <p className='fadein'>{feature.description}</p>\n                  ): (<p className='fadeout'>{feature.description}</p>)} */}\n                  <p className={`fade${(featureOpen[0] && featureOpen[1]===key) ? \"in\" : \"out\"}`}>{feature.description}</p>\n                  \n                </div>\n              )\n            })\n          }\n\n          \n          \n        </div>\n        <div className='intro-img'>\n          <img  src={mobileQrMenu} alt=''></img>\n        </div>\n        <div>\n          <Link to='/how-it-works'>\n            <button className='btn-link learn-more'>Learn more <i className='eos-icons'>keyboard_arrow_right</i></button>\n          </Link>\n          <br></br>\n          <NavLink to='/create'>\n            <button className='black-yellow'>\n              Create Menu \n            </button>\n          </NavLink>\n          <button className='black-yellow'>\n            Scan Menu \n          </button>\n      </div>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport yellowLogo from '../assets/images/grub.live-logo-yellow.svg'\nconst Footer = () => {\n\n\n  return (\n    <footer>\n        <div>\n          <img src={yellowLogo} alt='Grub.live logo' className='logo'></img>\n          <div>Rejuvenating the dining experience.</div>\n        </div>\n        <div className='footer-links'>\n          <div className='footer-item hyperlink-invert'>Contact Us</div>\n          <div className='footer-item hyperlink-invert'>How it works</div>\n          <div className='footer-item hyperlink-invert'>Feedback</div>\n          <div className='footer-item hyperlink-invert'>About Us</div>\n        </div>\n        <br></br>\n        <br></br>\n      <span>Made with ❤ in India</span><br></br>\n      <span>© 2020 Grub.live</span>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst PreviewRestaurantMenu = (props) => {\n\n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='shadow-box'>\n\n      <div  style={{textAlign: \"center\"}}>\n          <h1>\n            {restaurantDetails.logo?\n            (<img src={restaurantDetails.logo} alt='' className='restaurant-logo'></img>)\n            :\n            (<i className='eos-icons' style={{color: 'red', fontSize: '1em', margin: '8px'}}>local_dining</i>)}   \n            {restaurantDetails.restaurantName}</h1>\n        </div> \n    <br></br>\n    <div>\n      {restaurantDetails.menu.categories.map((element, key) => {\n            return (\n            \n            <div key={key}>\n            <h2>{element.title}</h2>\n            \n\n            {\n              restaurantDetails.menu.categories[key].items.map((item, itemKey) => {\n                return (<div key={itemKey}>\n                  <p style={{display: \"inline-block\", margin: 0}}>{item.itemName}</p>\n                  <p style={{float: \"right\", margin: 0}}>{item.itemPrice}</p>\n                  <br></br>\n                  <br></br>  \n                </div>\n                \n                )\n              })\n            }\n            \n          \n          </div>)\n          \n        })}  \n    </div>\n    </div>\n  )\n\n}\n\nexport default PreviewRestaurantMenu","import React from 'react'\nimport PreviewRestaurantMenu from './PreviewRestaurantMenu'\n\nconst PreviewModal = (props) => {\n\n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='preview-modal'>\n      <PreviewRestaurantMenu restaurantDetails={restaurantDetails} />\n    </div>\n  )\n}\n\nexport default PreviewModal","import React, { useState } from 'react'\nimport {apiBaseUrl} from '../config.json'\nimport PreviewModal from './PreviewModal'\nimport {dummyRestaurantDetails} from '../dummyData.json'\n\nconst EditMenu = (props) => {\n  \n  const restaurantDetails = props.restaurantDetails\n  const setRestaurantDetails = props.setRestaurantDetails\n\n  const [previewModal, setPreviewModal] = useState(false)\n  const [submitState, setSubmitState]  = useState(false)\n  const changeRestaurantTitle = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.restaurantName =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n\n  const changeEmailId = (e) => {\n  \n    const temp = { ...restaurantDetails}\n    temp.emailId =  e.target.value\n    setRestaurantDetails(temp)\n    \n  }\n  \n  const togglePreviewModal = () => {\n    setPreviewModal(!previewModal)\n  }\n\n  const updateLogo = (e) => {\n    const uploadedFile = e.target.files[0]\n    if(uploadedFile) {\n      if(uploadedFile.size > 2000000) {\n        alert(\"Please upload an image with size less than 2 mb.\")\n        return;\n      }\n\n      const reader = new FileReader()\n      reader.readAsDataURL(uploadedFile)\n      reader.onloadend = () => {\n\n      const temp = {...restaurantDetails}\n      temp.logo =  reader.result\n      console.log(reader.result)\n      setRestaurantDetails(temp)\n\n      }\n    }\n    \n  }\n\n  const updateTitle = (e, key) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[key].title = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addItem = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.push({\n      itemName: \"\",\n      itemPrice: \"\"\n    })\n    setRestaurantDetails(temp)\n  }\n\n  const deleteItem = (categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories[categoryKey].items.splice(itemKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const itemOnChange = (itemType, e, categoryKey, itemKey) => {\n    const temp = {...restaurantDetails}\n    itemType === 'name' ? \n    temp.menu.categories[categoryKey].items[itemKey].itemName = e.target.value\n    :\n    temp.menu.categories[categoryKey].items[itemKey].itemPrice = e.target.value\n    setRestaurantDetails(temp)\n  }\n\n  const addCategory = () => {\n\n    const temp = {...restaurantDetails}\n    temp.menu.categories.push( {\n      title: '',\n      type: 'text',\n      items: [\n\n      ]\n    }) \n    setRestaurantDetails(temp)\n\n  }\n\n  const deleteCategory = (categoryKey) => {\n    const temp = {...restaurantDetails}\n    temp.menu.categories.splice(categoryKey, 1)\n    setRestaurantDetails(temp)\n  }\n\n  const handleKeyDown = (e, categoryKey) => {\n    if(e.keyCode === 13) \n      {\n        e.preventDefault()\n        addItem(categoryKey)\n        \n      }\n  }\n\n\n\n\n  const submitMenu = e => {\n    if(!submitState) {\n      setSubmitState(true)  \n      if(!restaurantDetails.emailId || !restaurantDetails.restaurantName) {\n        setSubmitState(false)\n        window.alert('Restaurant name and Email Id cannot be blank')\n        return\n      }\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(restaurantDetails)\n      };\n      fetch(`${apiBaseUrl}/submit`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          setSubmitState(false)\n          console.log(data)\n          if(!data.success)\n            {\n              window.alert('Some problem occrred while creating menu')\n              return\n            }\n            window.location = `/#/qr/${data.id }`\n          \n        });\n    }\n  }\n\n  return (\n    <div className='edit-menu'>\n      {\n        previewModal ? <PreviewModal restaurantDetails={restaurantDetails}/>\n        :<></>\n        \n      }\n      \n      <h2>Edit Menu <i className='eos-icons'>edit</i></h2>\n      <p>Please enter the following details to create your Virtual QR Menu.</p>\n      {restaurantDetails.restaurantName ? \n      <></>\n      :\n      <button onClick={() => setRestaurantDetails(dummyRestaurantDetails)} className='hyperlink btn-link' style={{float: \"right\", color: '#007cbf'}}>\n        Fill dummy data  <i className='eos-icons'>keyboard</i>\n      </button>\n      }\n      \n      <br></br>\n      <br></br>\n      \n      <form>\n      <div className='shadow-box'>\n        <p>Name of Restaurant</p>\n        <input required={true} className='form-input' placeholder='Example: Moti Mahal Deluxe' onChange={ e => changeRestaurantTitle(e)} defaultValue={restaurantDetails.restaurantName}></input>\n        <p>Logo (if any)</p>\n        <input type='file' accept='image/*' onChange={e => updateLogo(e)}></input>\n        <p>Email ID (You can use this to edit Menu later)</p>\n        <input type=\"email\" required={true} className='form-input' placeholder='Example: johndoe@gmail.com' onChange={ e => changeEmailId(e)} defaultValue={restaurantDetails.emailId}></input>\n      </div>\n      \n\n      {restaurantDetails.menu.categories.map((element, categoryKey) => {\n         return (\n         \n         <div className='shadow-box' key={categoryKey}>\n           <i onClick={() => deleteCategory(categoryKey)} style={{float: 'right'}} className='eos-icons delete-icon'>close</i>\n          <p>Title</p>\n          <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].title} className='form-input' onChange={e => updateTitle(e,categoryKey)} placeholder='Example: Chinese food'></input>\n          <br></br><br></br>\n          <div>\n            {\n              restaurantDetails.menu.categories[categoryKey].items.map((item, itemKey) => {\n                return (\n                  <div key = {itemKey}>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Item Name</p>\n                      <input required={true} onChange = {(e) => itemOnChange('name', e, categoryKey, itemKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].items[itemKey].itemName} className='form-input' placeholder='Eg: French Fries'></input>\n                    </div>\n                    <div style={{display: \"inline-block\"}}>\n                      <p>Price</p>\n                      <input required={true} onKeyDown={(e) => handleKeyDown(e, categoryKey)} onChange = {(e) => itemOnChange('price', e, categoryKey, itemKey)} defaultValue={restaurantDetails.menu.categories[categoryKey].items[itemKey].itemPrice} className='form-input' placeholder='Eg: Half: $4.99 , Full: $9.99'></input>\n                    </div>\n                    <i onClick={() => deleteItem(categoryKey, itemKey)} className='eos-icons delete-icon'>delete</i>\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{float: \"right\"}}>\n            <button type='button' className='hyperlink btn-link' onClick={() => addItem(categoryKey)}>Add Item <i className='eos-icons'>add_circle_outline</i> </button>\n          </div>\n\n\n        </div>\n        )\n        \n      })}\n            \n      <div>\n        <div style={{float: \"right\"}}>\n          <button type='button' onClick={() => togglePreviewModal()} className='hyperlink btn-link preview-btn' >Preview <i className='eos-icons'>visibility</i> </button>\n        </div>\n        <div style={{float: \"right\"}}>\n          <button type='button' className='hyperlink btn-link' onClick={() => addCategory()}>Add Category <i className='eos-icons'>add_circle_outline</i> </button>\n        </div>\n          <br></br>\n          <br></br>\n        <div style={{float: \"right\"}}>\n          <button type='button' onClick={(e) => submitMenu(e)} className='black-yellow'>\n            {submitState ? (\n                `Generating...`\n            ): (`Generate QR Menu`)}\n            \n          </button>\n        </div>\n      </div>\n\n      </form>\n\n    </div>\n  )\n\n}\n\n\nexport default EditMenu\n","import React from 'react'\nimport PreviewRestaurantMenu from './PreviewRestaurantMenu'\nconst PreviewMenu = (props) => {\n  \n  const restaurantDetails = props.restaurantDetails\n\n  return (\n    <div className='preview-menu'>\n      <h2>Preview Menu <i className='eos-icons'>slideshow</i></h2>\n      <p>Once done, create on Generate QR Menu to create your Virtual Menu.</p>\n      <br></br>\n      <PreviewRestaurantMenu restaurantDetails={restaurantDetails} />\n    </div>\n  )\n\n}\n\n\nexport default PreviewMenu","import React, { useState } from 'react'\nimport EditMenu from './EditMenu'\nimport PreviewMenu from './PreviewMenu'\nconst CreateMenu = () => {\n\n  const sampleRestaurantDetails = {\n    emailId: \"\",\n    restaurantName: \"\",\n    logo: \"\",\n    menu: {\n      categories: [ ]\n    }\n  }\n  const [restaurantDetails, setRestaurantDetails] = useState(sampleRestaurantDetails);\n  \n  return (\n\n    <div className='container'>\n\n      <EditMenu restaurantDetails={restaurantDetails} setRestaurantDetails={setRestaurantDetails}/>\n      <PreviewMenu restaurantDetails={restaurantDetails} />\n      \n    </div>\n  )\n}\n\nexport default CreateMenu","import React from 'react'\nimport Step1 from '../assets/images/HowItWorks/Step1.png'\nimport Step2 from '../assets/images/HowItWorks/Step2.png'\nimport Step3 from '../assets/images/HowItWorks/Step3.png'\nimport Step4 from '../assets/images/HowItWorks/Step4.png'\nimport Step5 from '../assets/images/HowItWorks/Step5.png'\n\nconst StepRight = (props) =>{\n\n    return(\n    <div className=\"mainDiv\">\n    <div className='textLeft'>\n        <h1>Step {props.no}</h1>\n        <p>{props.name}</p>\n    </div> \n    <div className=\"imgRight\">\n        <img src={props.imageURL}  alt=''></img>\n    </div>     \n    </div>\n    )\n}\n\nconst StepLeft = (props) =>{\n\n    return(\n        <div className=\"mainDiv\">\n         <div className='textRight'>\n            <h1>Step {props.no}</h1>\n            <p>{props.name}</p>\n        </div> \n        <div className=\"imgLeft\">\n            <img src={props.imageURL} alt=''></img>\n        </div>      \n        </div>\n        )\n  \n}\n\nconst HowItWorks = () =>{\n\n    return(\n       <div>\n       <StepRight\n        name=\"Naman\"\n        no=\"1\"\n        imageURL={Step1}\n        \n         />\n\n        <StepLeft \n         name=\"Bhatia\"\n         no=\"2\"\n         imageURL={Step2}\n\n         />\n \n        <StepRight\n        name=\"Naman\"\n        no=\"3\"\n        imageURL={Step3}\n        \n         />\n\n        <StepLeft \n         name=\"Bhatia\"\n         no=\"4\"\n         imageURL={Step4}\n\n         />\n\n        <StepRight\n        name=\"Naman\"\n        no=\"5\"\n        imageURL={Step5}\n        \n         />\n\n\n         </div>\n    )\n}\n\nexport default HowItWorks","import React from 'react'\nimport QRCode from 'qrcode.react'\nimport logo from '../assets/images/grub.live-logo.svg'\n\nconst QrImage = (props) => {\n\n  const url = props.url\n  const restaurantDetails = props.restaurantDetails\n  console.log(restaurantDetails)\n\n\n\n  return (\n\n    <div className='qr-image'>\n      <div id='qr-download'>\n        <img src={logo} alt='' className='logo'></img>\n        <hr></hr>\n        <h2>\n        {\n          restaurantDetails.logo?\n          <img src={restaurantDetails.logo} alt='' className='restaurant-logo'></img>\n          :\n          (<i className='eos-icons' style={{color: 'red', fontSize: '1em', margin: '8px'}}>local_dining</i>)\n        }\n        {restaurantDetails.restaurantName}\n        </h2>\n        <p>Scan to see Menu</p>\n        <QRCode size={200} className='qr-code' id='qr-code' value={url}/>\n        <p>QR Menu Genreated with www.grub.live</p>\n      </div>\n    </div>\n  )\n\n}\n\nexport default QrImage\n","import React, {useState} from 'react'\nimport * as htmlToImage from 'html-to-image';\nimport {useParams} from 'react-router-dom'\nimport loadingIcon from '../assets/images/three_dots_loading.svg'\n\n\nimport {apiBaseUrl} from '../config.json'\nimport QrImage from './QrImage'\n\n\nconst QrContainer = (props) => {\n\n  const [restaurantDetails, setRestaurantDetails] = useState(null)\n  const [dataFetched, setDataFetched] = useState(false)\n  let { menuId } = useParams();\n  if(!dataFetched) {\n    fetch(`${apiBaseUrl}/view?q=${menuId}`)\n        .then(response => response.json())\n        .then(data => {\n          setDataFetched(true)\n          console.log(data)\n          if(data.success)\n            {\n              setRestaurantDetails(data.data)\n            }\n        });\n  }\n\n  const url = `https://glqr.me/#/${menuId}`\n\n  const downloadSticker = () => {\n    console.log('Downloading QR Sticker...')\n    htmlToImage.toPng(document.getElementById('qr-download'))\n    .then(function (dataUrl) {\n      var svgImg = document.createElement('a');\n      svgImg.href = dataUrl;\n      svgImg.setAttribute('download', 'QrMenu.png');\n      svgImg.click();\n      // document.body.append(svgImg)\n\n      \n    });\n  }\n\n  const downloadQrCode = () => {\n    console.log('Downloading QR Code...')\n    htmlToImage.toPng(document.getElementById('qr-code'))\n    .then(function (dataUrl) {\n      var svgImg = document.createElement('a');\n      svgImg.href = dataUrl;\n      svgImg.setAttribute('download', 'QrCode.png');\n      svgImg.click();\n      // document.body.append(svgImg)\n    });\n  }\n\n\n  return (\n    <div className='container' style={{textAlign: \"left\"}}>\n      \n      {dataFetched ? (\n      <div>\n          {restaurantDetails?\n        (\n          <div>\n            <h2>QR Menu Generated!</h2>\n            <p>You are ready for contactless dining experience. Download your QR code and paste it on the table.</p>\n            <button onClick={() => downloadSticker()} className='black-yellow'>Download QR Sticker</button>\n            <button onClick={() => downloadQrCode()} className='black-yellow'>Download QR Code</button>\n            <QrImage url={url} restaurantDetails = {restaurantDetails}/>\n          </div>\n        ):\n        (\n          <div>\n            <h1>Incorrect Menu Id</h1>\n          </div>\n        )}\n      </div>\n        )\n      :\n      (\n      <div style={{textAlign: \"center\", marginBottom: '40%'}}>\n        <img alt='' className='loading-icon' src={loadingIcon} />\n      </div>\n      )}\n\n    </div>\n  )\n}\n\nexport default QrContainer\n\n","import React from 'react'\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\"\n\nimport './assets/scss/index.scss'\nimport '../node_modules/eos-icons/dist/css/eos-icons.css'\n// import '.assets/fonts/Lato/Lato-Regular.ttf'\n\nimport Navigation from './components/Navigation'\nimport Home from './components/Home'\nimport Footer from './components/Footer'\nimport CreateMenu from './components/CreateMenu'\nimport HowItworks from './components/HowItWorks'\nimport QrContainer from './components/QrContainter'\n\nfunction App() {\n  return (\n    <div className='App'>\n        <div>\n          <HashRouter>\n            <Navigation />\n            <Switch>\n\n              <Route exact path='/' children={<Home />} />\n              <Route exact path='/create'  children={<CreateMenu />} />\n              <Route exact path='/how-it-works' children={<HowItworks />} />\n              <Route path='/qr/:menuId' children={<QrContainer />}/>\n            </Switch>\n\n          </HashRouter>\n        </div>\n        <Footer />\n      </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}